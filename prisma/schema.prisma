generator client {
  provider = "prisma-client-js"
  previewFeatures = ["clientExtensions", "postgresqlExtensions"]
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
  extensions      = [pgcrypto]
}

model customer {
  id           String     @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  first_name   String?    @db.VarChar(255)
  last_name    String?    @db.VarChar(255)
  phone_number String?    @db.VarChar(255)
  address      String?    @db.VarChar(255)
  email        String?    @db.VarChar(255)
  user_id      String     @db.Uuid
  created_at   DateTime   @default(now()) @db.Timestamp(6)
  updated_at   DateTime   @default(now()) @db.Timestamp(6)
  user         user       @relation(fields: [user_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
  purchase     purchase[]
}

model medicine {
  id           String     @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  name         String     @db.VarChar(255)
  description  String?    @db.VarChar(255)
  manufacturer String?    @db.VarChar(255)
  expiry_date  DateTime?  @db.Timestamp(6)
  quantity     Int?
  pharmacy_id  String     @db.Uuid
  created_at   DateTime   @default(now()) @db.Timestamp(6)
  updated_at   DateTime   @default(now()) @db.Timestamp(6)
  pharmacy     pharmacy   @relation(fields: [pharmacy_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
  purchase     purchase[]
}

model pharmacy {
  id             String     @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  description    String?    @db.VarChar(255)
  location       String?    @db.VarChar(255)
  contact_number String?    @db.VarChar(255)
  opening_hours  String?    @db.VarChar(255)
  closing_hours  String?    @db.VarChar(255)
  name           String     @db.VarChar(255)
  created_at     DateTime   @default(now()) @db.Timestamp(6)
  updated_at     DateTime   @default(now()) @db.Timestamp(6)
  user_id        String     @db.Uuid
  tenant_id      String     @db.VarChar(255)
  medicine       medicine[]
  user           user       @relation(fields: [user_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
}

model purchase {
  id            String    @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  medicine_id   String    @db.Uuid
  customer_id   String    @db.Uuid
  quantity      Int?
  purchase_date DateTime? @db.Timestamp(6)
  total_price   Int?
  created_at    DateTime  @default(now()) @db.Timestamp(6)
  updated_at    DateTime  @default(now()) @db.Timestamp(6)
  customer      customer  @relation(fields: [customer_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
  medicine      medicine  @relation(fields: [medicine_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
}

model supplier {
  id             String   @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  name           String   @db.VarChar(255)
  contact_number String?  @db.VarChar(255)
  address        String?  @db.VarChar(255)
  email          String?  @db.VarChar(255)
  user_id        String   @db.Uuid
  created_at     DateTime @default(now()) @db.Timestamp(6)
  updated_at     DateTime @default(now()) @db.Timestamp(6)
  user           user     @relation(fields: [user_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
}

model user {
  id          String     @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  email       String     @unique @db.VarChar(255)
  firstName   String?    @db.VarChar(255)
  lastName    String?    @db.VarChar(255)
  roq_user_id String     @db.VarChar(255)
  tenant_id   String     @db.VarChar(255)
  created_at  DateTime   @default(now()) @db.Timestamp(6)
  updated_at  DateTime   @default(now()) @db.Timestamp(6)
  customer    customer[]
  pharmacy    pharmacy[]
  supplier    supplier[]
}
